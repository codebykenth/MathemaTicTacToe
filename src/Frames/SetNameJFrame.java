package Frames;

import java.awt.Image;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Kenth Alexis Osila
 */
public class SetNameJFrame extends javax.swing.JFrame {

    GameJFrame gameJFrame = new GameJFrame(); // Instantiated the GameJFrame to access the lblCategory variable

    /**
     * Creates new form SetNameJFrame
     */
    public SetNameJFrame() {
        initComponents();
        rescaleImages();
        // Set the frame icon
        ImageIcon img = new ImageIcon("C:\\Users\\aisa\\Documents\\NetBeansProjects\\Mathema-TicTacToe\\src\\Images\\gameLogo.png");
        this.setIconImage(img.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBg = new javax.swing.JPanel();
        lblSelect = new javax.swing.JLabel();
        btnAddition = new javax.swing.JButton();
        btnSubtraction = new javax.swing.JButton();
        btnMultiplication = new javax.swing.JButton();
        lblAddImg = new javax.swing.JLabel();
        lblMinusImg = new javax.swing.JLabel();
        lblMultiplyImg = new javax.swing.JLabel();
        lblDivideImg = new javax.swing.JLabel();
        txtP1Name = new javax.swing.JTextField();
        txtP2Name = new javax.swing.JTextField();
        lblP1 = new javax.swing.JLabel();
        lblP2 = new javax.swing.JLabel();
        lblPlayerName = new javax.swing.JLabel();
        lblBg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MATHEMA-TICTACTOE");
        setMinimumSize(new java.awt.Dimension(1366, 768));
        setResizable(false);

        panelBg.setMaximumSize(new java.awt.Dimension(1366, 768));
        panelBg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblSelect.setFont(new java.awt.Font("Imprint MT Shadow", 0, 48)); // NOI18N
        lblSelect.setForeground(new java.awt.Color(255, 255, 255));
        lblSelect.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSelect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/lblSelect.png"))); // NOI18N
        lblSelect.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        panelBg.add(lblSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 460, 600, 70));

        btnAddition.setFont(new java.awt.Font("Imprint MT Shadow", 0, 12)); // NOI18N
        btnAddition.setForeground(new java.awt.Color(255, 255, 255));
        btnAddition.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/btnAddition.png"))); // NOI18N
        btnAddition.setBorderPainted(false);
        btnAddition.setContentAreaFilled(false);
        btnAddition.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddition.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAddition.setName("ADDITION"); // NOI18N
        btnAddition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdditionActionPerformed(evt);
            }
        });
        panelBg.add(btnAddition, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 600, 350, 90));

        btnSubtraction.setFont(new java.awt.Font("Imprint MT Shadow", 0, 36)); // NOI18N
        btnSubtraction.setForeground(new java.awt.Color(255, 255, 255));
        btnSubtraction.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/btnSubtraction.png"))); // NOI18N
        btnSubtraction.setBorderPainted(false);
        btnSubtraction.setContentAreaFilled(false);
        btnSubtraction.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSubtraction.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSubtraction.setName("SUBTRACTION"); // NOI18N
        btnSubtraction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubtractionActionPerformed(evt);
            }
        });
        panelBg.add(btnSubtraction, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 600, 350, 90));

        btnMultiplication.setFont(new java.awt.Font("Imprint MT Shadow", 0, 36)); // NOI18N
        btnMultiplication.setForeground(new java.awt.Color(255, 255, 255));
        btnMultiplication.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/btnMultiplication.png"))); // NOI18N
        btnMultiplication.setBorderPainted(false);
        btnMultiplication.setContentAreaFilled(false);
        btnMultiplication.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMultiplication.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnMultiplication.setName("MULTIPLICATION"); // NOI18N
        btnMultiplication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMultiplicationActionPerformed(evt);
            }
        });
        panelBg.add(btnMultiplication, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 600, 350, 90));

        lblAddImg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAddImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/AddIcon.png"))); // NOI18N
        lblAddImg.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        panelBg.add(lblAddImg, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 75, 75));

        lblMinusImg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMinusImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/MinusIcon.png"))); // NOI18N
        panelBg.add(lblMinusImg, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 410, 75, 75));

        lblMultiplyImg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMultiplyImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/MultiplyIcon.png"))); // NOI18N
        panelBg.add(lblMultiplyImg, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 80, 75, 75));

        lblDivideImg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDivideImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/DivideIcon.png"))); // NOI18N
        lblDivideImg.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        panelBg.add(lblDivideImg, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 410, 75, 75));

        txtP1Name.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtP1Name.setMaximumSize(new java.awt.Dimension(420, 80));
        txtP1Name.setMinimumSize(new java.awt.Dimension(420, 80));
        txtP1Name.setPreferredSize(new java.awt.Dimension(420, 80));
        txtP1Name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtP1NameKeyTyped(evt);
            }
        });
        panelBg.add(txtP1Name, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 210, 420, 50));

        txtP2Name.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtP2Name.setMaximumSize(new java.awt.Dimension(420, 80));
        txtP2Name.setMinimumSize(new java.awt.Dimension(420, 80));
        txtP2Name.setPreferredSize(new java.awt.Dimension(420, 80));
        txtP2Name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtP2NameKeyTyped(evt);
            }
        });
        panelBg.add(txtP2Name, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 290, 420, 50));

        lblP1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblP1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/lblP1.png"))); // NOI18N
        lblP1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblP1.setMaximumSize(new java.awt.Dimension(80, 80));
        lblP1.setMinimumSize(new java.awt.Dimension(80, 80));
        lblP1.setPreferredSize(new java.awt.Dimension(80, 80));
        panelBg.add(lblP1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 210, 80, 50));

        lblP2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblP2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/lblP2.png"))); // NOI18N
        lblP2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblP2.setMaximumSize(new java.awt.Dimension(80, 80));
        lblP2.setMinimumSize(new java.awt.Dimension(80, 80));
        panelBg.add(lblP2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 290, 80, 50));

        lblPlayerName.setFont(new java.awt.Font("Imprint MT Shadow", 0, 48)); // NOI18N
        lblPlayerName.setForeground(new java.awt.Color(255, 255, 255));
        lblPlayerName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPlayerName.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/lblPlayerName.png"))); // NOI18N
        panelBg.add(lblPlayerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 80, 600, 70));

        lblBg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/bg2.png"))); // NOI18N
        panelBg.add(lblBg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 768));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1366, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelBg, javax.swing.GroupLayout.PREFERRED_SIZE, 1366, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 768, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelBg, javax.swing.GroupLayout.PREFERRED_SIZE, 768, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * This method rescale all the images that have been used in the frame.
     */
    public void rescaleImages() {
        // Rescale background image
        Icon iBg = lblBg.getIcon();
        ImageIcon imgBg = (ImageIcon) iBg;
        Image imageBg = imgBg.getImage().getScaledInstance(lblBg.getWidth(), lblBg.getHeight(), Image.SCALE_SMOOTH);
        lblBg.setIcon(new ImageIcon(imageBg));

        // Rescale player 1 label
        Icon iP1 = lblP1.getIcon();
        ImageIcon imgIconP1 = (ImageIcon) iP1;
        Image imageP1N = imgIconP1.getImage().getScaledInstance(lblP1.getWidth(), lblP1.getHeight(), Image.SCALE_SMOOTH);
        lblP1.setIcon(new ImageIcon(imageP1N));

        // Rescale player 2 label
        Icon iP2 = lblP2.getIcon();
        ImageIcon imgIconP2 = (ImageIcon) iP2;
        Image imageP2 = imgIconP2.getImage().getScaledInstance(lblP2.getWidth(), lblP2.getHeight(), Image.SCALE_SMOOTH);
        lblP2.setIcon(new ImageIcon(imageP2));

        // Rescale addition button
        Icon iAddition = btnAddition.getIcon();
        ImageIcon imgIconAddition = (ImageIcon) iAddition;
        Image imageAddition = imgIconAddition.getImage().getScaledInstance(btnAddition.getWidth(), btnAddition.getHeight(), Image.SCALE_SMOOTH);
        btnAddition.setIcon(new ImageIcon(imageAddition));

        // Rescale subtraction button
        Icon iSubtraction = btnSubtraction.getIcon();
        ImageIcon imgIconSubtraction = (ImageIcon) iSubtraction;
        Image imageSubtraction = imgIconSubtraction.getImage().getScaledInstance(btnSubtraction.getWidth(), btnSubtraction.getHeight(), Image.SCALE_SMOOTH);
        btnSubtraction.setIcon(new ImageIcon(imageSubtraction));

        // Rescale multiplication button
        Icon i = btnMultiplication.getIcon();
        ImageIcon imgIconMultiplication = (ImageIcon) i;
        Image imageMultiplication = imgIconMultiplication.getImage().getScaledInstance(btnAddition.getWidth(), btnAddition.getHeight(), Image.SCALE_SMOOTH);
        btnMultiplication.setIcon(new ImageIcon(imageMultiplication));

        // Rescale player name label
        Icon iPlayerName = lblPlayerName.getIcon();
        ImageIcon imgPlayerName = (ImageIcon) iPlayerName;
        Image imagePlayerName = imgPlayerName.getImage().getScaledInstance(lblPlayerName.getWidth(), lblPlayerName.getHeight(), Image.SCALE_SMOOTH);
        lblPlayerName.setIcon(new ImageIcon(imagePlayerName));

        // Rescale select label
        Icon iSelect = lblSelect.getIcon();
        ImageIcon imgSelect = (ImageIcon) iSelect;
        Image imageSelect = imgSelect.getImage().getScaledInstance(lblSelect.getWidth(), lblSelect.getHeight(), Image.SCALE_SMOOTH);
        lblSelect.setIcon(new ImageIcon(imageSelect));

        // Rescale add image
        Icon iAdd = lblAddImg.getIcon();
        ImageIcon imgAdd = (ImageIcon) iAdd;
        Image imageAdd = imgAdd.getImage().getScaledInstance(lblAddImg.getWidth(), lblAddImg.getHeight(), Image.SCALE_SMOOTH);
        lblAddImg.setIcon(new ImageIcon(imageAdd));

        // Rescale minus image 
        Icon iMinus = lblMinusImg.getIcon();
        ImageIcon imgMinus = (ImageIcon) iMinus;
        Image imageMinus = imgMinus.getImage().getScaledInstance(lblMinusImg.getWidth(), lblMinusImg.getHeight(), Image.SCALE_SMOOTH);
        lblMinusImg.setIcon(new ImageIcon(imageMinus));

        // Rescale multiply image 
        Icon iMultiply = lblMultiplyImg.getIcon();
        ImageIcon imgMultiply = (ImageIcon) iMultiply;
        Image imageMultiply = imgMultiply.getImage().getScaledInstance(lblMultiplyImg.getWidth(), lblMultiplyImg.getHeight(), Image.SCALE_SMOOTH);
        lblMultiplyImg.setIcon(new ImageIcon(imageMultiply));

        // Rescale divide image 
        Icon iDivide = lblDivideImg.getIcon();
        ImageIcon imgDivide = (ImageIcon) iDivide;
        Image imageDivide = imgDivide.getImage().getScaledInstance(lblDivideImg.getWidth(), lblDivideImg.getHeight(), Image.SCALE_SMOOTH);
        lblDivideImg.setIcon(new ImageIcon(imageDivide));
    }

    /**
     * This method checks whether the inputted player name is valid or not
     * Players can't enter a blank text field
     * Players name must be different
     * Both player should input name
     * txtP1Name - this is the text field for Player 1 name 
     * txtP2Name - this is the text field for Player 2 name
     */
    public void checkPlayerName() {
        if (txtP1Name.getText().isBlank() && txtP2Name.getText().isBlank()) {
            JOptionPane.showMessageDialog(null, "Please input players name");
        } else if (txtP1Name.getText().equalsIgnoreCase(txtP2Name.getText())) {
            JOptionPane.showMessageDialog(null, "Player name cannot be the same");
            txtP1Name.setText("");
            txtP2Name.setText("");
        } else if (txtP2Name.getText().isBlank()) {
            JOptionPane.showMessageDialog(null, "Please input Player 2 name");
            txtP1Name.setText("");
        } else if (txtP1Name.getText().isBlank()) {
            JOptionPane.showMessageDialog(null, "Please input Player 1 name");
            txtP2Name.setText("");
        } else {
            gameJFrame.lblP1Name.setText(txtP1Name.getText().toUpperCase());
            gameJFrame.lblP2Name.setText(txtP2Name.getText().toUpperCase());
            gameJFrame.setVisible(true);
            this.dispose();
        }
    }

    /**
     * This button set the text of category label to SUBTRACTION in the next frame (GameJFrame) and checks the name of the player if valid or not.
     * gameJFrame.lblCategory - this is the label in GameJFrame that will be changed to SUBTRACTION when the tile is clicked.
     * @param evt - action event
     */
    private void btnSubtractionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubtractionActionPerformed
        gameJFrame.lblCategory.setText("CATEGORY: " + btnSubtraction.getName()); // Set CATEGORY LABEL in GameJFrame
        checkPlayerName();
    }//GEN-LAST:event_btnSubtractionActionPerformed

    /**
     * This button set the text of category label to MULTIPLICATION in the next frame (GameJFrame) and checks the name of the player if valid or not.
     * gameJFrame.lblCategory - this is the label in GameJFrame that will be changed to MULTIPLICATION when the tile is clicked.
     * @param evt - action event
     */
    private void btnMultiplicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMultiplicationActionPerformed
        gameJFrame.lblCategory.setText("CATEGORY: " + btnMultiplication.getName()); // Set CATEGORY LABEL in GameJFrame
        checkPlayerName();
    }//GEN-LAST:event_btnMultiplicationActionPerformed

    /**
     * This button set the text of category label to ADDITION in the next frame (GameJFrame) and checks the name of the player if valid or not
     * gameJFrame.lblCategory - this is the label in GameJFrame that will be changed to ADDITION when the tile is clicked
     * @param evt - action event
     */
    private void btnAdditionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdditionActionPerformed
        gameJFrame.lblCategory.setText("CATEGORY: " + btnAddition.getName());
        checkPlayerName();
    }//GEN-LAST:event_btnAdditionActionPerformed

   /**
    * This method will prevent the player from typing characters that is not a letter.
    * @param evt - action event
    */
    private void txtP1NameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtP1NameKeyTyped
        JTextField txtAnswerTyped = (JTextField) evt.getSource();
        char c = evt.getKeyChar();
        if (!Character.isLetter(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtP1NameKeyTyped

    /**
    * This method will prevent the player from typing characters that is not a letter.
    * @param evt - action event
    */
    private void txtP2NameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtP2NameKeyTyped
         JTextField txtAnswerTyped = (JTextField) evt.getSource();
        char c = evt.getKeyChar();
        if (!Character.isLetter(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtP2NameKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SetNameJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SetNameJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SetNameJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SetNameJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SetNameJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddition;
    private javax.swing.JButton btnMultiplication;
    private javax.swing.JButton btnSubtraction;
    private javax.swing.JLabel lblAddImg;
    private javax.swing.JLabel lblBg;
    private javax.swing.JLabel lblDivideImg;
    private javax.swing.JLabel lblMinusImg;
    private javax.swing.JLabel lblMultiplyImg;
    private javax.swing.JLabel lblP1;
    private javax.swing.JLabel lblP2;
    private javax.swing.JLabel lblPlayerName;
    private javax.swing.JLabel lblSelect;
    private javax.swing.JPanel panelBg;
    private javax.swing.JTextField txtP1Name;
    private javax.swing.JTextField txtP2Name;
    // End of variables declaration//GEN-END:variables
}
